<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozt.traveler.dao.OztTravelLocationTraceMapper">
  <resultMap id="BaseResultMap" type="com.ozt.traveler.entity.OztTravelLocationTrace">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="travel_city_id" jdbcType="INTEGER" property="travelCityId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, longitude, latitude, travel_city_id, address, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ozt_travel_location_trace
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ozt_travel_location_trace
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ozt.traveler.entity.OztTravelLocationTrace">
    insert into ozt_travel_location_trace (id, user_id, longitude, 
      latitude, travel_city_id, address, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{travelCityId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ozt.traveler.entity.OztTravelLocationTrace">
    insert into ozt_travel_location_trace
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="travelCityId != null">
        travel_city_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="travelCityId != null">
        #{travelCityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ozt.traveler.entity.OztTravelLocationTrace">
    update ozt_travel_location_trace
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="travelCityId != null">
        travel_city_id = #{travelCityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ozt.traveler.entity.OztTravelLocationTrace">
    update ozt_travel_location_trace
    set user_id = #{userId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      travel_city_id = #{travelCityId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.ozt.traveler.OztTravelLocationTrace">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="travel_city_id" jdbcType="INTEGER" property="travelCityId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, longitude, latitude, travel_city_id, address, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ozt_travel_location_trace
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ozt_travel_location_trace
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ozt.traveler.OztTravelLocationTrace">
    insert into ozt_travel_location_trace (id, user_id, longitude, 
      latitude, travel_city_id, address, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{travelCityId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ozt.traveler.OztTravelLocationTrace">
    insert into ozt_travel_location_trace
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="travelCityId != null">
        travel_city_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="travelCityId != null">
        #{travelCityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ozt.traveler.OztTravelLocationTrace">
    update ozt_travel_location_trace
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="travelCityId != null">
        travel_city_id = #{travelCityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ozt.traveler.OztTravelLocationTrace">
    update ozt_travel_location_trace
    set user_id = #{userId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      travel_city_id = #{travelCityId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>